stages:
  - Compliance
  - Build
  - Analysis
  - Deploy

variables:
  IMAGE_BASE: ${CI_REGISTRY}/kwinft/ci-images/archlinux/kwinft-base

workflow:
  rules:
    - when: always

include:
  - project: kwinft/tooling
    ref: master
    file:
      - '/analysis/gitlab-ci/static.yml'
      - '/analysis/gitlab-ci/tests.yml'
      - '/docs/gitlab-ci/commits.yml'


# We use the following two job templates because we build with different images on master and
# stable branches and GitLab CI does allow to set the image name only through variable expansion.
.common-master: &common-master
  image: ${IMAGE_BASE}-master:latest
  rules:
    - if: '$COVERITY_SCAN_RUN'
      when: never
    - if: '$CI_COMMIT_BRANCH =~ /^Plasma\// || $CI_COMMIT_TAG'
      when: never
    - when: on_success

.common-stable: &common-stable
  image: ${IMAGE_BASE}-stable:latest
  rules:
    - if: '$COVERITY_SCAN_RUN'
      when: never
    - if: '$CI_COMMIT_BRANCH =~ /^Plasma\// || $CI_COMMIT_TAG'
      when: on_success
    - when: never


####################################################################################################
#
# Compliance
#

Message Lint:
  extends: .message-lint
  stage: Compliance

Clang-Format:
  extends: .clang-format
  stage: Compliance
  image: ${IMAGE_BASE}-master:latest


####################################################################################################
#
# Build
#

.common-build: &common-build
  stage: Build
  before_script:
    # Wrapland build for custom branches.
    - mkdir -p wrapland-bench/build && cd wrapland-bench
    - git clone --branch output-viewport https://gitlab.com/romangg/wrapland.git src
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../src
    - make -j$(nproc)
    - make install -j$(nproc)
    - cd ../..
  script:
    - mkdir build && cd build
    - cmake
      -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_EXE_LINKER_FLAGS=--coverage
      -DCMAKE_INSTALL_PREFIX:PATH=/usr ../
    - make -j$(nproc)
    - make install -j$(nproc)
  artifacts:
    paths:
      - build
      - wrapland-bench
    expire_in: 1 week

Master Build:
  <<: *common-build
  <<: *common-master

Stable Build:
  <<: *common-build
  <<: *common-stable


####################################################################################################
#
# Analysis
#

.common-test:
  extends: .tests-with-coverage
  stage: Analysis
  variables:
    GCOVR_ARGS: -e tests
  before_script:
    # Install Wrapland.
    - cd wrapland-bench/build
    - make install -j$(nproc)
    - cd ../..

Master Tests:
  extends: .common-test
  <<: *common-master
  needs:
    - job: Master Build
      artifacts: true

Stable Tests:
  extends: .common-test
  <<: *common-stable
  needs:
    - job: Stable Build
      artifacts: true


####################################################################################################
#
# Deploy
#

Add Coverage:
  extends: .add-coverage
  stage: Deploy
  variables:
    COVERAGE_JOB: Master Tests

pages:
  extends: .pages-coverage
  stage: Deploy
  needs:
    - job: Master Tests
      artifacts: true
